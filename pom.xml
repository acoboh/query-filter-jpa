<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.acoboh</groupId>
	<artifactId>query-filter-jpa-parent</artifactId>
	<version>0.2.1</version>

	<packaging>pom</packaging>

	<name>query-filter-jpa-parent</name>
	<description>
		The QueryFilterJPA Library adds the possibility of create custom
		filters with RHS Colon and LHS Brackets with Spring JPA easily
	</description>

	<url>https://github.com/acoboh/query-filter-jpa</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>author</id>
			<name>Adrián Cobo</name>
			<email>acoboh.github@gmail.com</email>
		</developer>
	</developers>

	<scm>
		<developerConnection>
			scm:git:git@github.com:acoboh/query-filter-jpa.git
		</developerConnection>
		<url>scm:git:git@github.com:acoboh/query-filter-jpa.git</url>
		<connection>scm:git:git@github.com:acoboh/query-filter-jpa.git</connection>
	</scm>

	<properties>
		<jdk.version>8</jdk.version>
		<jdk-test.version>8</jdk-test.version>
		<maven.compiler.source>${jdk.version}</maven.compiler.source>
		<maven.compiler.target>${jdk.version}</maven.compiler.target>

		<maven.compiler.testSource>${jdk-test.version}</maven.compiler.testSource>
		<maven.compiler.testTarget>${jdk-test.version}</maven.compiler.testTarget>

		<console.log.level>DEBUG</console.log.level>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
		<maven-source-plugin.version>3.3.0</maven-source-plugin.version>
		<maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
		<maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>

		<datasource-proxy.version>1.6</datasource-proxy.version>
		<testcontainers.version>1.19.3</testcontainers.version>
		<junit.version>5.10.1</junit.version>
		<assertj-core.version>3.25.1</assertj-core.version>

		<!-- Guava dependencies -->
		<guava.version>32.1.3-jre</guava.version>

		<!-- JDBC Driver versions -->
		<postgresql.version>42.7.2</postgresql.version>

		<!-- JaCoCo Properties -->
		<jacoco.version>0.8.11</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.basedir}/../target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.language>java</sonar.language>

	</properties>

	<modules>
		<!-- Spring Boot 2.7.X -->
		<module>query-filter-jpa</module>
		<module>query-filter-jpa-openapi</module>

		<!-- Spring Boot 3.X -->
		<module>query-filter-jpa-3</module>
		<module>query-filter-jpa-openapi-3</module>
	</modules>

	<dependencyManagement>
		<dependencies>


			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj-core.version}</version>
			</dependency>

			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<distributionManagement>

		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>

		<repository>
			<id>ossrh</id>
			<url>
				https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/
			</url>
		</repository>

	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<defaultAuthor>Adrián Cobo</defaultAuthor>
					<version>false</version>
					<author>true</author>
					<additionalOptions>
						<additionalOption>-Xdoclint:none</additionalOption>
					</additionalOptions>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven-gpg-plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<gpgArguments>
						<arg>--pinentry-mode</arg>
						<arg>loopback</arg>
					</gpgArguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
